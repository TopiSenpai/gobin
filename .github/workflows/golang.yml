name: Golang

on:
  push:
  release:
    types: [published]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [ linux ] # [ linux, windows, darwin ]
        goarch: [ amd64 ] # [ amd64, 386, arm, arm64 ]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.18.x
          cache: true

      - name: File Extension Windows
        if: ${{ matrix.goos == 'windows' }}
        run: echo "file_extension=.exe" >> $GITHUB_ENV

      - name: Create Dist Folder
        run: mkdir dist

      - name: Build
        run: |
          CGO_ENABLED=0
          GOOS=${{ matrix.goos }}
          GOARCH=${{ matrix.goarch }}
          go build -ldflags="-X 'main.version=$(git describe --tags)' -X 'main.commit=$(git rev-parse HEAD)' -X 'main.buildTime=$(date --rfc-3339=seconds)'" -o dist/gobin-${{ matrix.goos }}-${{ matrix.goarch }}${{ env.file_name }} github.com/topisenpai/gobin/cli

      - name: Upload
        uses: actions/upload-artifact@v3
        with:
          name: gobin-cli
          path: dist/gobin-*

      - name: Release
        if: ${{ github.event_name == 'release' }}
        uses: ncipollo/release-action@v1
        with:
          artifacts: dist/gobin-*
          allowUpdates: true
